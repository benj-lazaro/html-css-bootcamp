/* flex-grow dictates how much of the available space inside the Flex Container a Flex Item */
/* should take up */
/* NOTE: This focuses on the empty space consumes; NOT the size of the Flex Item */

/* Reference (https://developer.mozilla.org/en-US/docs/Web/CSS/flex-grow) */

/* Example */
/* <flex_item_1> {
    flex-grow: 1;
   } 

   <flex_item_2> {
    flex-grow: 2; = takes up twice as much empty space as the other Flex Item (e.g. <flex_item_1>)
  } 
*/

/* flex sets how a Flex Item grows or shrinks to fit the space available in its Flex Container */
/* flex: <flex-grow> <flex-shrink> <flex-basis> */
/* Reference (https://developer.mozilla.org/en-US/docs/Web/CSS/flex) */

h1 {
  text-align: center;
  font-family: sans-serif;
  font-size: 6rem;
}

.container {
  border: 4px solid black;
  width: 70%;
  height: 1000px;
  margin: 40px auto;
  display: flex;
  flex-direction: row;
  justify-content: center;
}

.sidebar {
  background-color: palevioletred;
  /* Consume empty space until it its width reaches 200px */
  flex-grow: 1;
  max-width: 200px;
}

p {
  background-color: darkseagreen;
  margin: 0;
  width: 600px;
  /* Takes up twice as much empty space as the .sidebar when there is empty space in the Flex Container */
  flex-grow: 2;
}
